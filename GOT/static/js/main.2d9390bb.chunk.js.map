{"version":3,"sources":["components/header/index.js","components/header/header.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","react_default","a","createElement","className","href","GOTService","Object","classCallCheck","this","isSet","data","_apiBase","bind","url","fetch","concat","res","ok","Error","status","json","getResource","result","map","_transformCharacter","id","character","char","name","gender","born","died","culture","house","region","words","titles","overlord","ancestralWeapon","book","numberOfPages","publiser","released","Spinner","ErrorMessage","Fragment","src","alt","RandomChar","gotService","state","loading","error","onCharLoaded","_this","setState","onError","err","updateChar","Math","floor","random","getCharacter","then","catch","timerID","setInterval","clearInterval","_this$state","errorMessage","components_errorMessage","spinner","components_spinner","content","randomChar_View","Component","View","_ref","ItemList","charList","_this2","getAllCharacters","arr","_this3","item","i","key","onClick","props","onCharSelected","items","renderItems","CharDetails","prevProps","charId","foo","bar","_this$state$char","App","possibleConstructorReturn","getPrototypeOf","call","selectedChar","randomChar","onClickBtn","assertThisInitialized","components_randomChar","Container","components_header","Row","Col","lg","size","offset","md","components_itemList","components_charDetails","React","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.2d9390bb.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\n\nconst Header = () => {\n    return (\n        <div className=\"headerBlock\">\n            <h3 className=\"headerTitle\">\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </h3>\n            <ul className=\"headerLinks\">\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Header;","export default class GOTService {\n\n    constructor() {\n        this._apiBase = 'https://www.anapioficeandfire.com/api';\n        this.isSet = this.isSet.bind(this);\n    }\n\n    async getResource (url) {\n        const res = await fetch(`${this._apiBase}${url}`);\n\n        if (!res.ok) { //проверка на 404\n            throw new Error(`Could not fetch ${url} status: ${res.status}`)\n        }\n\n        return await res.json();\n    };\n\n    async getAllCharacters() {\n        const result = await this.getResource('/characters?page=5');\n        return result.map(this._transformCharacter.bind(this));\n\n    }\n\n    async getCharacter(id){\n        const character = await this.getResource(`/characters/${id}`);\n        return this._transformCharacter(character);\n    }\n\n    getAllBooks() {\n        return this.getResource(`/books?page=5&pageSize=10`);\n    }\n\n    getBook(id){\n        return this.getResource(`/books/${id}`);\n    }\n\n    getAllHouses(){\n        return this.getResource(`/houses?page=5&pageSize=10`);\n    }\n\n    getHouse(id){\n        return this.getResource(`/houses/${id}`);\n    }\n\n    isSet = (data) => {\n        if(data){\n            return data;\n        } else {\n            return 'No info';\n        }\n    }\n\n    _transformCharacter(char) {\n        return {\n            name: this.isSet(char.name),\n            gender: this.isSet(char.gender),\n            born: this.isSet(char.born),\n            died: this.isSet(char.died),\n            culture: this.isSet(char.culture) \n        }\n    }\n\n    _transformHouse(house){\n        return {\n            name: this.isSet(house.name),\n            region: this.isSet(house.region),\n            words: this.isSet(house.words),\n            titles: this.isSet(house.titles),\n            overlord: this.isSet(house.overlord),\n            ancestralWeapon: this.isSet(house.ancestralWeapon)\n        }\n    }\n\n    _transformBook(book){\n        return {\n            name: this.isSet(book.name),\n            numberOfPages: this.isSet(book.numberOfPages),\n            publiser: this.isSet(book.publiser),\n            released: this.isSet(book.released)\n\n        }\n    }\n}\n\n","import Spinner from './spinner';\nexport default Spinner;","import React, {Component} from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"loadingio-spinner-ripple-4t6cl8xd4l8\"><div className=\"ldio-jvmhqfdjiz\">\n            <div></div><div></div>\n        </div></div>\n    )\n}\n\nexport default Spinner;\n\n\n\n\n\n","import ErrorMessage from './errorMessage';\n\nexport default ErrorMessage;","import React from 'react';\nimport './errorMessage.css';\n/* import img from './error.jpg' //если брать картинку из той же папки 97 урок\n */\nconst ErrorMessage = () => {\n    return (\n        <>\n            <img src={process.env.PUBLIC_URL + '/img/error.jpg'} alt=\"error\"></img>{/* чтобы добраться до картинки */}\n            <span>Something wrong with page!!!</span>\n        </>\n    )\n}\n\nexport default ErrorMessage;","import React, {Component} from 'react';\nimport './randomChar.css';\nimport GOTService from '../../services/gotService';\nimport Spinner from '../spinner';\nimport ErrorMessage from '../errorMessage'\n\nexport default class RandomChar extends Component {\n\n    gotService = new GOTService();\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar();\n        this.timerID = setInterval(this.updateChar, 1500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false\n        })\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random()*140 + 25);//от 25 до 140\n        this.gotService.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const { char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"random-block rounded\">\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        );\n    }\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char;\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    ) \n}","import RandomChar from './randomChar';\n\nexport default RandomChar;","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\nimport './itemList.css';\nimport GOTService from '../../services/gotService';\nimport Spinner from '../spinner';\n\n\nexport default class ItemList extends Component {\n\n    GOTService = new GOTService();\n\n    state = {\n        charList: null\n    }\n\n    componentDidMount() {\n        this.GOTService.getAllCharacters()\n            .then((char) => {\n                this.setState({\n                    charList: char\n                })\n            })\n    }\n\n    renderItems(arr) {\n        return arr.map((item, i) => {\n            return (\n                <li \n                    key={i}\n                    className=\"list-group-item\"\n                    onClick={ () => this.props.onCharSelected(41 + i)}>\n                    {item.name}\n                </li>\n            )\n        })\n    }\n\n    render() {\n\n        const {charList} = this.state;\n\n        if (!charList) {\n            return <Spinner/>;\n        }\n\n        const items = this.renderItems(charList);\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}","import CharDetails from './charDetails';\nexport default CharDetails;","import React, {Component} from 'react';\nimport './charDetails.css';\nimport GOTService from '../../services/gotService';\nexport default class CharDetails extends Component {\n\n    GOTService = new GOTService();\n\n    state = {\n        char: null\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar() {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.GOTService.getCharacter(charId)\n            .then((char) => {\n                this.setState({char})\n            })\n        this.foo.bar = 0;\n    }\n\n    render() {\n\n        if (!this.state.char) {\n            return <span className='select-error'>Please select character</span>\n        }\n\n        const {name, gender, born, died, culture} = this.state.char;\n\n        return (\n            <div className=\"char-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport {Col, Row, Container} from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\nimport \"../header/header.css\";\nimport './app.css'\n\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            randomChar: true,\n            selectedChar: null\n        }\n        this.onClickBtn = this.onClickBtn.bind(this)\n    }\n\n    \n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    onClickBtn (){\n        this.setState(({randomChar}) => ({\n            randomChar: !randomChar\n        }))\n    }\n\n\n    render() {\n        const {randomChar} = this.state\n        const random = randomChar ? <RandomChar/> : null;\n        return (\n            <> \n                <Container>\n                    <Header />\n                </Container> \n                <Container>\n                    <Row>\n                        <Col lg={{size: 5, offset: 0}}>\n                            {random}\n                        </Col>\n                    </Row>\n                    <button \n                        className=\"closeRandomChar\" \n                        onClick={this.onClickBtn}\n                        >Toggle random</button>\n                    <Row>\n                        <Col md='6'>\n                            <ItemList onCharSelected={this.onCharSelected}/>\n                        </Col>\n                        <Col md='6'>\n                            <CharDetails charId={this.state.selectedChar}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}